// <auto-generated />
using System;
using GymApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GymApp.Migrations
{
    [DbContext(typeof(GymAppContext))]
    partial class GymAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("GymApp.Models.BodyPart", b =>
                {
                    b.Property<int>("BodyPartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BodyPartName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ExerciseId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BodyPartID");

                    b.HasIndex("ExerciseId");

                    b.ToTable("BodyParts");
                });

            modelBuilder.Entity("GymApp.Models.Exercise", b =>
                {
                    b.Property<int>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExerciseName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TrainingEquipementEquipementID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ExerciseId");

                    b.HasIndex("TrainingEquipementEquipementID");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("GymApp.Models.ExerciseSet", b =>
                {
                    b.Property<int>("ExerciseSetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Repetitions")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Weight")
                        .HasColumnType("REAL");

                    b.Property<int?>("WorkoutSessionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ExerciseSetId");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("WorkoutSessionId");

                    b.ToTable("ExerciseSets");
                });

            modelBuilder.Entity("GymApp.Models.TrainingEquipement", b =>
                {
                    b.Property<int>("EquipementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EquipementName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("EquipementID");

                    b.ToTable("TrainingEquipements");
                });

            modelBuilder.Entity("GymApp.Models.WorkoutSession", b =>
                {
                    b.Property<int>("WorkoutSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TimeFinished")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeStarted")
                        .HasColumnType("TEXT");

                    b.HasKey("WorkoutSessionId");

                    b.ToTable("WorkoutSessions");
                });

            modelBuilder.Entity("GymApp.Models.BodyPart", b =>
                {
                    b.HasOne("GymApp.Models.Exercise", null)
                        .WithMany("BodyParts")
                        .HasForeignKey("ExerciseId");
                });

            modelBuilder.Entity("GymApp.Models.Exercise", b =>
                {
                    b.HasOne("GymApp.Models.TrainingEquipement", "TrainingEquipement")
                        .WithMany()
                        .HasForeignKey("TrainingEquipementEquipementID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrainingEquipement");
                });

            modelBuilder.Entity("GymApp.Models.ExerciseSet", b =>
                {
                    b.HasOne("GymApp.Models.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymApp.Models.WorkoutSession", null)
                        .WithMany("ExerciseSets")
                        .HasForeignKey("WorkoutSessionId");

                    b.Navigation("Exercise");
                });

            modelBuilder.Entity("GymApp.Models.Exercise", b =>
                {
                    b.Navigation("BodyParts");
                });

            modelBuilder.Entity("GymApp.Models.WorkoutSession", b =>
                {
                    b.Navigation("ExerciseSets");
                });
#pragma warning restore 612, 618
        }
    }
}
