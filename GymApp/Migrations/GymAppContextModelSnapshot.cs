// <auto-generated />
using System;
using GymApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GymApp.Migrations
{
    [DbContext(typeof(GymAppContext))]
    partial class GymAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("GymApp.Models.BodyPart", b =>
                {
                    b.Property<int>("BodyPartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BodyPartName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("BodyPartID");

                    b.ToTable("BodyParts");

                    b.HasData(
                        new
                        {
                            BodyPartID = 1,
                            BodyPartName = "Shoulders"
                        },
                        new
                        {
                            BodyPartID = 2,
                            BodyPartName = "Chest"
                        },
                        new
                        {
                            BodyPartID = 3,
                            BodyPartName = "Back"
                        },
                        new
                        {
                            BodyPartID = 4,
                            BodyPartName = "Abs"
                        },
                        new
                        {
                            BodyPartID = 5,
                            BodyPartName = "Glutes"
                        },
                        new
                        {
                            BodyPartID = 6,
                            BodyPartName = "Quads"
                        },
                        new
                        {
                            BodyPartID = 7,
                            BodyPartName = "Biceps"
                        },
                        new
                        {
                            BodyPartID = 8,
                            BodyPartName = "Triceps"
                        });
                });

            modelBuilder.Entity("GymApp.Models.Exercise", b =>
                {
                    b.Property<int>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExerciseName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TrainingEquipementId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ExerciseId");

                    b.HasIndex("TrainingEquipementId");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            ExerciseId = 1,
                            ExerciseName = "Bench Press",
                            TrainingEquipementId = 1
                        },
                        new
                        {
                            ExerciseId = 2,
                            ExerciseName = "Bench Press with dumbells",
                            TrainingEquipementId = 2
                        },
                        new
                        {
                            ExerciseId = 3,
                            ExerciseName = "Squat",
                            TrainingEquipementId = 1
                        },
                        new
                        {
                            ExerciseId = 4,
                            ExerciseName = "Bend Over Row w/ dumbells",
                            TrainingEquipementId = 2
                        },
                        new
                        {
                            ExerciseId = 5,
                            ExerciseName = "Biceps curl w/ dumbells",
                            TrainingEquipementId = 2
                        },
                        new
                        {
                            ExerciseId = 6,
                            ExerciseName = "Triceps pull downs w/ band",
                            TrainingEquipementId = 4
                        },
                        new
                        {
                            ExerciseId = 7,
                            ExerciseName = "Dead Lift",
                            TrainingEquipementId = 1
                        });
                });

            modelBuilder.Entity("GymApp.Models.ExerciseSet", b =>
                {
                    b.Property<int>("ExerciseSetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Repetitions")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Weight")
                        .HasColumnType("REAL");

                    b.Property<int>("WorkoutSessionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ExerciseSetId");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("WorkoutSessionId");

                    b.ToTable("ExerciseSets");

                    b.HasData(
                        new
                        {
                            ExerciseSetId = 1,
                            ExerciseId = 1,
                            Repetitions = 10,
                            Weight = 100f,
                            WorkoutSessionId = 1
                        },
                        new
                        {
                            ExerciseSetId = 2,
                            ExerciseId = 2,
                            Repetitions = 8,
                            Weight = 90f,
                            WorkoutSessionId = 1
                        },
                        new
                        {
                            ExerciseSetId = 3,
                            ExerciseId = 3,
                            Repetitions = 6,
                            Weight = 85f,
                            WorkoutSessionId = 1
                        });
                });

            modelBuilder.Entity("GymApp.Models.TrainingEquipement", b =>
                {
                    b.Property<int>("EquipementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EquipementName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("EquipementID");

                    b.ToTable("TrainingEquipements");

                    b.HasData(
                        new
                        {
                            EquipementID = 1,
                            EquipementName = "Barbell"
                        },
                        new
                        {
                            EquipementID = 2,
                            EquipementName = "Dumbell"
                        },
                        new
                        {
                            EquipementID = 3,
                            EquipementName = "Kettlebell"
                        },
                        new
                        {
                            EquipementID = 4,
                            EquipementName = "Resistance Band"
                        });
                });

            modelBuilder.Entity("GymApp.Models.WorkoutSession", b =>
                {
                    b.Property<int>("WorkoutSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TimeFinished")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeStarted")
                        .HasColumnType("TEXT");

                    b.HasKey("WorkoutSessionId");

                    b.ToTable("WorkoutSessions");

                    b.HasData(
                        new
                        {
                            WorkoutSessionId = 1,
                            TimeFinished = new DateTime(2024, 5, 1, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            TimeStarted = new DateTime(2024, 5, 1, 18, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            WorkoutSessionId = 2,
                            TimeFinished = new DateTime(2024, 5, 10, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            TimeStarted = new DateTime(2024, 5, 10, 18, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            WorkoutSessionId = 3,
                            TimeFinished = new DateTime(2024, 5, 20, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            TimeStarted = new DateTime(2024, 5, 20, 18, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            WorkoutSessionId = 4,
                            TimeFinished = new DateTime(2024, 6, 5, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            TimeStarted = new DateTime(2024, 6, 5, 18, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            WorkoutSessionId = 5,
                            TimeFinished = new DateTime(2024, 6, 15, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            TimeStarted = new DateTime(2024, 6, 15, 18, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            WorkoutSessionId = 6,
                            TimeFinished = new DateTime(2024, 6, 25, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            TimeStarted = new DateTime(2024, 6, 25, 18, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            WorkoutSessionId = 7,
                            TimeFinished = new DateTime(2024, 7, 5, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            TimeStarted = new DateTime(2024, 7, 5, 18, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            WorkoutSessionId = 8,
                            TimeFinished = new DateTime(2024, 7, 15, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            TimeStarted = new DateTime(2024, 7, 15, 18, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("GymApp.Models.Exercise", b =>
                {
                    b.HasOne("GymApp.Models.TrainingEquipement", "TrainingEquipement")
                        .WithMany()
                        .HasForeignKey("TrainingEquipementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrainingEquipement");
                });

            modelBuilder.Entity("GymApp.Models.ExerciseSet", b =>
                {
                    b.HasOne("GymApp.Models.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymApp.Models.WorkoutSession", "WorkoutSession")
                        .WithMany("ExerciseSets")
                        .HasForeignKey("WorkoutSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("WorkoutSession");
                });

            modelBuilder.Entity("GymApp.Models.WorkoutSession", b =>
                {
                    b.Navigation("ExerciseSets");
                });
#pragma warning restore 612, 618
        }
    }
}
